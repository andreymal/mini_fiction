[tool.poetry]
name = "mini_fiction"
version = "0.1.0"
description = "CMS for fanfics"
license = "GPL-3.0-only"
authors = [
    "andreymal <andriyano-31@mail.ru>",
    "Andriy Kushnir (Orhideous) <me@orhideous.name>"
]
readme = "README.md"
homepage = "https://github.com/andreymal/mini_fiction"
repository = "https://github.com/andreymal/mini_fiction"
keywords = ["library", "CMS", "books", "fiction", "writing"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Framework :: Flask",
    "License :: OSI Approved",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content :: Content Management System"
]
include = [
    "frontend/*.*",
    "frontend/src/**/*",
    "mini_fiction/sphinx.conf",
    "mini_fiction/filters/**/*.xslt",
    "mini_fiction/fixtures/*.jsonl",
    "mini_fiction/static/fonts/*",
    "mini_fiction/static/build/**/*",
    "mini_fiction/templates/**/*",
    "mini_fiction/translations/**/*",
]
exclude = [
    "frontend/node_modules/**/*",
]

[tool.poetry.dependencies]
python = ">=3.8.1,<3.12.0"
Flask-WTF = "^1.1"
WTForms = "^3.0"
Flask-Login = "^0.6"
flask-babel = "^3.1"
Flask = "~2.3"
Werkzeug = "^2.3"
Jinja2 = "^3.1"
MarkupSafe = "^2.1"
Flask-Cors = "^4.0"
cachelib = "^0.10"
Cerberus = "~1.3"
Unidecode = "^1.3"
redis = "^4.6"  # TODO: upgrade after celery
celery = "^5.3"
pony = "~0.7.17"
feedgen = ">=0.9.0"
lxml = "^4.9"
pytz = "*"
email-validator = "^2.0"
pydantic = "^1.10"
Pillow = "^10.0"
bcrypt = { version = "^4.0", optional = true }
scrypt = { version = "^0.8.20", optional = true }
mysqlclient = { version = "^2.2", optional = true }
diff-match-patch-python = { version = "^1.0.3", optional = true }
captcha = { version = "^0.5", optional = true }

[tool.poetry.group.dev.dependencies]
Flask-DebugToolbar = "^0.13.1"
pylint = "^2.17"
flake8 = "^6.1"
flake8-variables-names = "^0.0.6"
flake8-tidy-imports = "^4.10.0"
flake8-pie = "^0.16"
mypy = "^1.5"
black = "^23.9"
isort = "^5.12"
pony-stubs = "^0.5.2"
types-pytz = "*"
pyright = "^1.1.327"

[tool.poetry.group.test.dependencies]
factory-boy = "^3.3"
pytest-runner = "^6.0.0"
pytest-selenium = "^4.0"
pytest-flask = "^1.2"
pytest-cov = "^4.1"
pytest-metadata = "^3.0"
pytest = "^7.4"
py = "^1.11"  # TODO: remove after https://github.com/pytest-dev/pytest-selenium/pull/314
selenium = ">=4.0,<4.10"  # https://github.com/pytest-dev/pytest-selenium/issues/315
coverage = "^7.3"
tox = "^4.11"

[tool.poetry.extras]
full = [
    "bcrypt",
    "scrypt",
    "mysqlclient",
    "diff-match-patch-python",
    "captcha"
]

[tool.poetry.scripts]
mini_fiction = "mini_fiction.management.main:run"

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/andreymal/mini_fiction/issues"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
minversion = "7.3"
addopts = "--driver=Chrome"
testpaths = ["tests"]
markers = ["nodbcleaner"]

[tool.isort]
profile = "black"
multi_line_output = 3

[tool.mypy]
mypy_path = "typings"
follow_imports = "normal"
strict_optional = true
strict = true
files = ["mini_fiction/logic/*.py"]
plugins = ["pydantic.mypy"]

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true
warn_untyped_fields = true

[tool.pylint.MASTER]
jobs = 0
[tool.pylint."MESSAGES CONTROL"]
extension-pkg-whitelist = "pydantic"
disable = [
    "invalid-name",
    "missing-module-docstring",
    "missing-class-docstring",
    "missing-function-docstring",
    "too-many-ancestors",
    "too-few-public-methods",
    "too-many-public-methods",
    "too-many-branches",
    "too-many-arguments",
    "too-many-locals",
    "line-too-long"
]
[tool.pylint.TYPECHECK]
generated-members = "flush"
[tool.pylint.imports]
allow-reexport-from-package = true

[tool.pyright]
include = ["mini_fiction/logic/**/*"]
typeCheckingMode = "basic"
reportMissingImports = true
reportMissingTypeStubs = false


[tool.tox]
# See: https://github.com/tox-dev/tox/issues/999
legacy_tox_ini = """
[tox]
envlist = py38, py39, py310, py311

[testenv]
skip_install = true
allowlist_externals = poetry
commands_pre =
    poetry env use system  # https://github.com/python-poetry/poetry/issues/2888
    poetry install
commands =
    poetry run make test
"""
